/*
 * Sample API
 *
 * A short description of API.
 *
 * API version: 1.0.0
 * Contact: support@example.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package usersapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A UsersApiController binds http requests to an api service and writes the service results to the http response
type UsersApiController struct {
	service UsersApiServicer
}

// NewUsersApiController creates a default api controller
func NewUsersApiController(s UsersApiServicer) Router {
	return &UsersApiController{ service: s }
}

// Routes returns all of the api route for the UsersApiController
func (c *UsersApiController) Routes() Routes {
	return Routes{ 
		{
			"UsersGet",
			strings.ToUpper("Get"),
			"/v1/users",
			c.UsersGet,
		},
		{
			"UsersPost",
			strings.ToUpper("Post"),
			"/v1/users",
			c.UsersPost,
		},
		{
			"UsersUserIdGet",
			strings.ToUpper("Get"),
			"/v1/users/{userId}",
			c.UsersUserIdGet,
		},
	}
}

// UsersGet - Get all users.
func (c *UsersApiController) UsersGet(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.UsersGet()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UsersPost - Create a new User
func (c *UsersApiController) UsersPost(w http.ResponseWriter, r *http.Request) { 
	user := &User{}
	if err := json.NewDecoder(r.Body).Decode(&user); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.UsersPost(*user)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// UsersUserIdGet - Get user by ID.
func (c *UsersApiController) UsersUserIdGet(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	userId := params["userId"]
	result, err := c.service.UsersUserIdGet(userId)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
